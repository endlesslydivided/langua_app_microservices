/**
* This file is auto-generated by nestjs-proto-gen-ts
*/

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

export const USER_STATS_SERVICE_NAME = "UserStatsService"
export const USER_STATS_PACKAGE_NAME = "userStats"

export namespace userStats {
    export interface UserStatsService {
        createOrUpdateVocabularyStats(
            data: CreateOrUpdateVocabularyStatsRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<CreateOrUpdateVocabularyStatsResponse>;
        getOverallVocabularyStats(
            data: GetOverallVocabularyStatsRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<GetOverallVocabularyStatsResponse>;
        findManyVocabularyStats(
            data: FindManyVocabularyStatsRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<FindManyVocabularyStatsResponse>;
    }
    export interface PageFilters {
        page?: number;
        limit?: number;
    }
    // |CreateOrUpdateVocabulartStats
    export interface CreateOrUpdateVocabularyStatsRequest {
        id?: string;
        userId?: string;
        startedMaterialsCount?: number;
        learnedMaterialsCount?: number;
        startedWordsCount?: number;
        learnedWordsCount?: number;
    }
    export interface CreateOrUpdateVocabularyStatsResponse {
        status?: number;
        error?: string[];
    }
    // |GetOverallVocabularyStats
    export interface GetOverallVocabularyStatsRequest {
        userId?: string;
    }
    export interface GetOverallVocabularyStatsResponse {
        status?: number;
        error?: string[];
        overallVocabularyStats?: GetOverallVocabularyStatsResponse.OverallVocabularyStats;
    }
    export namespace GetOverallVocabularyStatsResponse {
        export interface OverallVocabularyStats {
            userId?: string;
            totalStartedMaterials?: number;
            totalLearnedMaterials?: number;
            totalStartedWords?: number;
            totalLearnedWords?: number;
        }
    }
    // |FindManyVocabularyStats
    export interface FindManyVocabularyStatsData {
        count?: number;
        rows?: FindManyVocabularyStatsData.VocabularyStats[];
    }
    export namespace FindManyVocabularyStatsData {
        // |FindManyVocabularyStats
        export interface VocabularyStats {
            userId?: string;
            startedMaterialsCount?: number;
            learnedMaterialsCount?: number;
            startedWordsCount?: number;
            learnedWordsCount?: number;
            createdAt?: string;
            updatedAt?: string;
        }
    }
    export interface FindManyVocabularyStatsRequest {
        userId?: string;
        pageFilters?: userStats.PageFilters;
    }
    export interface FindManyVocabularyStatsResponse {
        status?: number;
        error?: string[];
        data?: userStats.FindManyVocabularyStatsData;
    }
}

