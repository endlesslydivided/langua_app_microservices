syntax = "proto3";

package material;

service MaterialService {
    rpc CreateMaterial (CreateMaterialRequest) returns (CreateMaterialResponse) {}
    rpc FindOneMaterialById (FindOneMaterialByIdRequest) returns (FindOneMaterialByIdResponse) {}
    rpc FindManyMaterialsByVocabularyId (FindManyMaterialsByVocabularyIdRequest) returns (FindManyMaterialsByVocabularyIdResponse) {}
    rpc FindManyMaterialsByCreatorId (FindManyMaterialsByCreatorIdRequest) returns (FindManyMaterialsByCreatorIdResponse) {}

    rpc CreateMaterialToVocabulary (CreateMaterialToVocabularyRequest) returns (CreateMaterialToVocabularyResponse) {}
    rpc UpdateMaterialToVocabulary (UpdateMaterialToVocabularyRequest) returns (UpdateMaterialToVocabularyResponse) {}
    rpc DeleteMaterialToVocabulary (DeleteMaterialToVocabularyRequest) returns (DeleteMaterialToVocabularyResponse) {}
}

message PageFilters{
    int32 page = 1;
    int32 limit = 2;
}

/// ---------------------- Material -----------------------

//| CreateMaterial
message CreateMaterialRequest {
    string creator_user_id = 1;
    string name = 2;
    string language = 3;
    string text_content = 4;
}

message CreateMaterialResponse {
    int32 status = 1;
    repeated string error = 2;
    string id = 3;
}

//| FindOneMaterialById
message Material {
    string id = 1;
    string name = 2;
    string language = 3;
    string text_content = 4;
    string creator_user_id = 5;
}
  
message FindOneMaterialByIdRequest {
    string id = 1;
}

message FindOneMaterialByIdResponse {
    int32 status = 1;
    repeated string error = 2;
    Material material = 3;
}

//| FindManyMaterialsByVocabularyId
message FindManyMaterialsByVocabularyIdData {
    
    message Material{
        message MaterialToVocabulary{
            string id = 1;
            string vocabulary_id = 2;
            string material_id = 3;
            bool is_finished = 4;
        }
        string id = 1;
        string name = 2;
        string language = 3;
        string text_content = 4;
        string creator_user_id = 5;
        repeated MaterialToVocabulary material_to_vocabulary = 6;
    }

    int32 count = 1;
    repeated Material rows = 2;
}
  
message FindManyMaterialsByVocabularyIdRequest {
    string vocabulary_id = 1;
    PageFilters page_filters = 2;
}

message FindManyMaterialsByVocabularyIdResponse {
    int32 status = 1;
    repeated string error = 2;
    FindManyMaterialsByVocabularyIdData data = 3;
}

//| FindManyMaterialsByCreatorId
message FindManyMaterialsBCreatorIdData {
   message Material{
        string id = 1;
        string name = 2;
        string language = 3;
        string text_content = 4;
        string creator_user_id = 5;
    }

    int32 count = 1;
    repeated Material rows = 2;
}
  
message FindManyMaterialsByCreatorIdRequest {
    string creator_id = 1;
    PageFilters page_filters = 2;
}

message FindManyMaterialsByCreatorIdResponse {
    int32 status = 1;
    repeated string error = 2;
    FindManyMaterialsBCreatorIdData data = 3;
}

/// ---------------------- MaterialToVocabulary ----------------------

//| CreateMaterialToVocabulary
message CreateMaterialToVocabularyRequest {
    string vocabulary_id = 1;
    string material_id = 2;
}

message CreateMaterialToVocabularyResponse {
    int32 status = 1;
    repeated string error = 2;
    string id = 3;
}

//| UpdateMaterialToVocabulary
message UpdateMaterialToVocabularyRequest {
    string id = 1;
    bool isFinished = 2;
}

message UpdateMaterialToVocabularyResponse {
    int32 status = 1;
    repeated string error = 2;
}

//| DeleteMaterialToVocabulary
message DeleteMaterialToVocabularyRequest {
    string id = 1;
}

message DeleteMaterialToVocabularyResponse {
    int32 status = 1;
    repeated string error = 2;
}


  
