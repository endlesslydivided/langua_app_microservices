syntax = "proto3";

package user-stats;

service UserStatsService{
    rpc CreateOrUpdateVocabularyStats (CreateOrUpdateVocabularyStatsRequest) returns (CreateOrUpdateVocabularyStatsResponse) {}
    rpc GetOverallVocabularyStats (GetOverallVocabularyStatsRequest) returns ( GetOverallVocabularyStatsResponse) {}
    rpc FindManyVocabularyStats (FindManyVocabularyStatsRequest) returns ( FindManyVocabularyStatsResponse) {}

}

message PageFilters{
    int32 page = 1;
    int32 limit = 2;
}

/// ------------------------ VocabularyStats ------------------------

//|CreateOrUpdateVocabulartStats
message CreateOrUpdateVocabulartStatsRequest{
    optional string id = 1;
    string user_id = 2;
    string started_materials_count = 3;
    string learned_materials_count = 4;
    string started_word_count = 5;
    string learned_word_count = 6;
}

message CreateOrUpdateVocabulartStatsResponse{
    int32 status = 1;
    repeated string error = 2;
}

//|GetOverallVocabularyStats
message GetOverallVocabularyStatsRequest{
    string user_id = 1;
}

message GetOverallVocabularyStatsResponse{

    message OverallVocabularyStats{
        string user_id = 1;
        string started_materials_count = 2;
        string learned_materials_count = 3;
        string started_word_count = 4;
        string learned_word_count = 5;
    }
    int32 status = 1;
    repeated string error = 2;
    OverallVocabularyStats overall_vocabulary_stats = 3;
}

//|FindManyVocabularyStats
message FindManyVocabularyStatsData{
    message VocabularyStats{
        string user_id = 1;
        string started_materials_count = 2;
        string learned_materials_count = 3;
        string started_word_count = 4;
        string learned_word_count = 5;
    }
    int32 count = 1;
    repeated VocabularyStats rows = 2;
}

message FindManyVocabularyStatsRequest{
    string user_id = 1;
    PageFilters page_filters = 2;
}

message FindManyVocabularyStatsResponse{
    int32 status = 1;
    repeated string error = 2;
    FindManyVocabularyStatsData data = 3;
}